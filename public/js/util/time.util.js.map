{"version":3,"sources":["../../app/src/util/time.util.ts"],"names":[],"mappings":"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","file":"time.util.js","sourcesContent":["export class TimeUtil {\r\n\r\n    static simpleDate(dateString: any): string {\r\n        let date;\r\n        if (typeof(dateString) == 'string') {\r\n            date = new Date(dateString);\r\n        } else {\r\n            date = dateString;\r\n        }\r\n\r\n        let month = this.getMonthName(date.getMonth()),\r\n            day = date.getDate(),\r\n            year = date.getFullYear();\r\n\r\n        return month + ' ' + day + ', ' + year;\r\n    }\r\n\r\n    static getMonthName(month: number): string {\r\n        switch(month) {\r\n            case 0:\r\n                return \"January\";\r\n            case 1:\r\n                return \"February\";\r\n            case 2:\r\n                return \"March\";\r\n            case 3:\r\n                return \"April\";\r\n            case 4:\r\n                return \"May\";\r\n            case 5:\r\n                return \"June\";\r\n            case 6:\r\n                return \"July\";\r\n            case 7:\r\n                return \"August\";\r\n            case 8:\r\n                return \"September\";\r\n            case 9:\r\n                return \"October\";\r\n            case 10:\r\n                return \"November\";\r\n            case 11:\r\n                return \"December\";\r\n        }\r\n    }\r\n\r\n    static simpleTime(dateString: string): string {\r\n        let date = new Date(dateString),\r\n            rawHours = date.getHours(),\r\n            mins = date.getMinutes(),\r\n            ampm = rawHours > 11 ? 'pm' : 'am',\r\n            hours = rawHours > 12 ? rawHours - 12 : rawHours;\r\n\r\n        return hours + ':' + mins + ' ' + ampm;\r\n    }\r\n\r\n    static SECOND_MILLIS = 1000;\r\n    static MINUTE_MILLIS = TimeUtil.SECOND_MILLIS * 60;\r\n    static HOUR_MILLIS = TimeUtil.MINUTE_MILLIS * 60;\r\n    static DAY_MILLIS = TimeUtil.HOUR_MILLIS * 24;\r\n\r\n    static isMorning(date: Date): boolean {\r\n        return date.getHours() > 4 && date.getHours() < 12;\r\n    }\r\n\r\n    static isAfternoon(date: Date): boolean {\r\n        return date.getHours() >= 12 && date.getHours() < 6;\r\n    }\r\n\r\n    static postTime(dateString: string): string {\r\n        let date = new Date(dateString),\r\n            today = new Date(),\r\n            timeDiff = today.getTime() - date.getTime();\r\n\r\n        if (timeDiff < this.DAY_MILLIS) {\r\n            if (timeDiff < this.HOUR_MILLIS) {\r\n                if (timeDiff < this.MINUTE_MILLIS * 5) {\r\n                    return 'Just now';\r\n                } else {\r\n                    return Math.round(timeDiff / this.MINUTE_MILLIS) + ' Minutes ago';\r\n                }\r\n            } else {\r\n                return Math.round(timeDiff / this.HOUR_MILLIS) + ' Hours ago';\r\n            }\r\n        } else if (timeDiff < this.DAY_MILLIS * 2) {\r\n            return 'Yesterday';\r\n        } else {\r\n            return this.simpleDate(dateString);\r\n        }\r\n    }\r\n\r\n}"]}