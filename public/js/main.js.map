{"version":3,"sources":["../../app/src/main.ts"],"names":[],"mappings":";;AAAA,8EAA2E;AAE3E,kDAAgD;AAEhD,yCAA2C;AAE3C,2CAAsC;AACtC,wBAAsB;AAEtB,EAAE,CAAC,CAAC,CAAQ,MAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IACnB,MAAO,CAAC,OAAO,GAAG,qBAAO,CAAC;AACrC,CAAC;AAED,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAA,QAAQ;IAC1B,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAA,UAAU;QAC3B,IAAM,QAAQ,GAAG,iDAAsB,CAAC,CAAC;gBACrC,OAAO,EAAE,wBAAY,EAAE,QAAQ,EAAE,UAAU;aAC9C,CAAC,CAAC,CAAC;QACJ,QAAQ,CAAC,eAAe,CAAC,sBAAS,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAA","file":"main.js","sourcesContent":["import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './module/app.module';\r\n\r\nimport { CONFIG_TOKEN } from './constants';\r\n\r\nimport { Promise } from 'es6-promise';\r\nimport 'whatwg-fetch';\r\n\r\nif (!(<any> window).Promise) {\r\n    (<any> window).Promise = Promise;\r\n}\r\n\r\nfetch('/config').then(response => {\r\n    response.json().then(configData => {\r\n        const platform = platformBrowserDynamic([{\r\n            provide: CONFIG_TOKEN, useValue: configData\r\n        }]);\r\n        platform.bootstrapModule(AppModule);\r\n    });\r\n})\r\n\r\n"]}