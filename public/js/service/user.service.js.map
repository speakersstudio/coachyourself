{"version":3,"sources":["../../app/src/service/user.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAA2C;AAG3C,8BAA8C;AAC9C,uCAAqC;AAErC,6CAA2C;AAC3C,0CAAmC;AAEnC,qCAAoC;AAWpC;IAAA;IAIA,CAAC;IAAD,oBAAC;AAAD,CAJA,AAIC,IAAA;AAGD;IAaI,qBACY,IAAa;QACrB,mCAAmC;;QAD3B,SAAI,GAAJ,IAAI,CAAS;QAZjB,qBAAgB,GAAG,iBAAiB,CAAC;QAOrC,sBAAiB,GAAG,IAAI,YAAO,EAAQ,CAAC;QAEhD,gBAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;QAMhD,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEO,kCAAY,GAApB;QACI,IAAI,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACvD,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACP,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAS,CAAC;QACjD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC7B,CAAC;IACL,CAAC;IAEO,kCAAY,GAApB,UAAqB,OAAa;QAC9B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAE5B,0BAA0B;QAC1B,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,EAAE,CAAC;QAEhC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACnF,CAAC;IAEO,mCAAa,GAArB;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACnD,CAAC;IAED,0CAAoB,GAApB;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;IACL,CAAC;IAED,wCAAkB,GAAlB;QACI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACnD,CAAC;IAED,2BAAK,GAAL,UAAM,KAAa,EAAE,QAAgB;QAArC,iBASC;QARG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAG,CAAC,KAAK,EAAE;YACtC,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,QAAQ;SACrB,CAAC,CAAC,SAAS,EAAE;aACb,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAAlC,CAAkC,CAAC,CAAC;QAE1D,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED,qCAAe,GAAf,UAAgB,KAAa;QACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAG,CAAC,gBAAgB,EAAE;YACxC,KAAK,EAAE,KAAK;SACf,CAAC,CAAC,SAAS,EAAE;aACb,IAAI,CAAC,UAAA,QAAQ;YACV,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;QACL,CAAC,CAAC,CAAA;IACN,CAAC;IAED,gDAA0B,GAA1B,UAA2B,KAAa;QACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAG,CAAC,0BAA0B,EAAE;YAClD,KAAK,EAAE,KAAK;SACf,CAAC,CAAC,SAAS,EAAE;aACb,IAAI,CAAC,UAAA,QAAQ;YACV,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;YAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;gBAC/C,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;QACL,CAAC,CAAC,CAAA;IACN,CAAC;IAED,oCAAc,GAAd,UAAe,KAAa,EAAE,QAAgB;QAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAG,CAAC,cAAc,EAAE;YACtC,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,KAAK;SACf,CAAC,CAAC,SAAS,EAAE;aACb,IAAI,CAAC,UAAA,QAAQ;YACV,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAU,CAAC;QACnC,CAAC,CAAC,CAAA;IACN,CAAC;IAED,kCAAY,GAAZ;QAAA,iBASC;QARG,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAG,CAAC,OAAO,EAAE,EAAE,CAAC;iBAC9C,SAAS,EAAE;iBACX,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAAlC,CAAkC,CAAC,CAAC;YAE1D,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;IACL,CAAC;IAED,yCAAmB,GAAnB,UAAoB,QAAkB;QAClC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACX,IAAI,YAAY,GAAG,QAAQ,CAAC,IAAI,EAAmB,CAAC;YACpD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,OAAO,CAAC,CAAC;YAC7D,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACrC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED,4BAAM,GAAN,UAAO,MAAgB;QAAvB,iBAUC;QATG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAG,CAAC,MAAM,EAAE,EAAE,CAAC;aAChC,SAAS,EAAE;aACX,IAAI,CAAC;YACF,KAAI,CAAC,aAAa,EAAE,CAAC;YACrB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACV,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAC9B,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;IACX,CAAC;IAEO,mCAAa,GAArB;QACI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,gCAAU,GAAV;QACI,MAAM,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC;IACrC,CAAC;IAED,qCAAe,GAAf;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;IACL,CAAC;IAED,mCAAa,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,YAAY,CAAC;IAC/C,CAAC;IAED,8BAAQ,GAAR;QACI,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,aAAa,CAAC;IAChD,CAAC;IAED,iCAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;IAC1E,CAAC;IAED,gCAAU,GAAV;QACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,IAAI,EAAE,CAAC;IAC3C,CAAC;IAED;;OAEG;IACH,gCAAU,GAAV,UAAW,IAAU;QAArB,iBAQC;QAPG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAG,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC;aAC/C,SAAS,EAAE;aACX,IAAI,CAAC,UAAC,QAAQ;YACX,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAU,CAAC;YACnC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACxB,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC;QAC7B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,mCAAa,GAAb,UAAc,GAAW,EAAE,GAAmB;QAA9C,iBAUC;QATG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAG,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;YAC7D,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,EAAE,GAAC,GAAG;SACd,CAAC,CAAC,SAAS,EAAE;aACT,IAAI,CAAC,UAAC,QAAQ;YACX,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAU,CAAC;YACnC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACxB,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC;QAC7B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,mCAAa,GAAb,UAAc,GAAW,EAAE,GAAY;QACnC,IAAI,KAAK,GAAW,GAAG,IAAI,EAAE,CAAC;QAE9B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,UAAA,IAAI;gBACtC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;oBAClB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBACvB,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAED,yBAAG,GAAH,UAAK,GAAW;QACZ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YAC3G,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACvD,CAAC;IACL,CAAC;IAED,mCAAa,GAAb,UAAc,IAAU;QACpB,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;IAED,uCAAiB,GAAjB,UAAkB,IAAU,EAAE,IAAU;QACpC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;YAClD,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAS,IAAI,CAAC,YAAY,CAAC,CAAC,CAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAW,IAAI,CAAC,YAAa,CAAC,SAAS,CAAC,UAAA,CAAC;gBAC3C,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC;YAC9B,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACZ,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAa,IAAI,CAAC,YAAa,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACjE,CAAC;IACL,CAAC;IAED,kCAAY,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;IAC7D,CAAC;IAED,8BAAQ,GAAR;QACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;IACpC,CAAC;IAED,+BAAS,GAAT,UAAU,IAAW;QACjB,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC;QACjC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;IAClG,CAAC;IAED,kCAAY,GAAZ,UAAa,MAAc;QAA3B,iBAWC;QAVG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,eAAG,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aAChD,SAAS,EAAE;aACX,IAAI,CAAC,UAAA,QAAQ;YACV,IAAI,WAAW,GAAG,WAAI,CAAC,SAAS,CAAC,KAAI,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YACpE,EAAE,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YACrD,CAAC;YAED,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC,CAAC,CAAA;IACV,CAAC;IAED,kCAAY,GAAZ,UAAa,QAAgB,EAAE,KAAc,EAAE,QAAiB,EAAE,IAAa;QAA/E,iBAoBC;QAnBG,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAG,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE;iBAClF,IAAI,CAAC,UAAA,QAAQ;gBACV,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAU,CAAC;gBACnC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACxB,KAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC;YAC7B,CAAC,CAAC,CAAA;QACV,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAG,CAAC,IAAI,EAAE;gBAC5B,KAAK,EAAE,KAAK;gBACZ,QAAQ,EAAE,QAAQ;gBAClB,MAAM,EAAE,QAAQ;gBAChB,IAAI,EAAE,IAAI;aACb,CAAC,CAAC,SAAS,EAAE;iBACb,IAAI,CAAC,UAAA,QAAQ;gBACV,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAU,CAAC;YACnC,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAED,+BAAS,GAAT,UAAU,IAAU;QAApB,iBAUC;QATG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAG,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE;aAC/E,IAAI,CAAC,UAAA,QAAQ;YACV,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAU,CAAC;YAEnC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACxB,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC;QAC7B,CAAC,CAAC,CAAA;IACV,CAAC;IAED;;OAEG;IACH,oCAAc,GAAd;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAG,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;aACzD,SAAS,EAAE;aACX,IAAI,CAAC,UAAA,QAAQ;YACV,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAgB,CAAC;QACzC,CAAC,CAAC,CAAC;IACX,CAAC;IAGD,uCAAiB,GAAjB;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;iBACjF,SAAS,EAAE;iBACX,IAAI,CAAC,UAAA,QAAQ;gBACV,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAU,CAAC;YACnC,CAAC,CAAC,CAAC;QACX,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC;IACrC,CAAC;IAnUQ,WAAW;QADvB,iBAAU,EAAE;yCAeS,kBAAO;YACrB,mCAAmC;;OAf9B,WAAW,CAqUvB;IAAD,kBAAC;CArUD,AAqUC,IAAA;AArUY,kCAAW","file":"user.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Response } from '@angular/http';\r\n\r\nimport { Observable, Subject } from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { AppHttp } from '../data/app-http';\r\nimport { API } from '../constants';\r\n\r\nimport { Util } from '../util/util';\r\n\r\nimport { User } from \"../model/user\";\r\nimport { Team } from '../model/team';\r\nimport { Purchase } from '../model/purchase';\r\nimport { Invite } from '../model/invite';\r\n\r\n// import { TeamService } from '../app/service/team.service';\r\n\r\nimport { Library } from '../model/library';\r\n\r\nclass LoginResponse {\r\n    user: User;\r\n    token: string;\r\n    expires: number;\r\n}\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n    private USER_STORAGE_KEY = 'improvplus_user';\r\n\r\n    loggedInUser: User;\r\n\r\n    isLoggingIn: boolean;\r\n    loginPromise: Promise<User>;\r\n\r\n    private logginStateSource = new Subject<User>();\r\n\r\n    loginState$ = this.logginStateSource.asObservable();\r\n\r\n    constructor(\r\n        private http: AppHttp\r\n        // private teamService: TeamService\r\n    ) {\r\n        this.loadUserData();\r\n    }\r\n\r\n    private loadUserData(): void {\r\n        let data = localStorage.getItem(this.USER_STORAGE_KEY);\r\n        if (data) {\r\n            this.loggedInUser = JSON.parse(data) as User;\r\n        } else {\r\n            this.loggedInUser = null;\r\n        }\r\n    }\r\n\r\n    private saveUserData(newUser: User): void {\r\n        this.loggedInUser = newUser;\r\n\r\n        // don't save the password\r\n        this.loggedInUser.password = \"\";\r\n        \r\n        localStorage.setItem(this.USER_STORAGE_KEY, JSON.stringify(this.loggedInUser));\r\n    }\r\n\r\n    private clearUserData(): void {\r\n        this.loggedInUser = null;\r\n        this._subscriptionPromise = null;\r\n        localStorage.removeItem(this.USER_STORAGE_KEY);\r\n    }\r\n\r\n    checkTokenExpiration(): boolean {\r\n        if (!this.http.checkTokenExpiration()) {\r\n            this.clearUserData();\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    announceLoginState() {\r\n        this.logginStateSource.next(this.loggedInUser);\r\n    }\r\n\r\n    login(email: string, password: string): Promise<User> {\r\n        this.isLoggingIn = true;\r\n        this.loginPromise = this.http.post(API.login, {\r\n                email: email,\r\n                password: password\r\n            }).toPromise()\r\n            .then(response => this._handleLoginRequest(response));\r\n        \r\n        return this.loginPromise;\r\n    }\r\n\r\n    recoverPassword(email: string): Promise<boolean> {\r\n        return this.http.post(API.passwordRecovery, {\r\n            email: email\r\n        }).toPromise()\r\n        .then(response => {\r\n            if (response.status == 200) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        })\r\n    }\r\n\r\n    checkPasswordRecoveryToken(token: string): Promise<boolean> {\r\n        return this.http.post(API.passwordRecoveryTokenCheck, {\r\n            token: token\r\n        }).toPromise()\r\n        .then(response => {\r\n            let data = response.json();\r\n            if (data['message'] && data['message'] == 'Okay') {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        })\r\n    }\r\n\r\n    changePassword(token: string, password: string): Promise<User> {\r\n        return this.http.post(API.passwordChange, {\r\n            password: password,\r\n            token: token\r\n        }).toPromise()\r\n        .then(response => {\r\n            return response.json() as User;\r\n        })\r\n    }\r\n\r\n    refreshToken(): Promise<User> {\r\n        if (this.checkTokenExpiration()) {\r\n            this.isLoggingIn = true;\r\n            this.loginPromise = this.http.post(API.refresh, {})\r\n                .toPromise()\r\n                .then(response => this._handleLoginRequest(response));\r\n            \r\n            return this.loginPromise;\r\n        }\r\n    }\r\n\r\n    _handleLoginRequest(response: Response): User {\r\n        this.isLoggingIn = false;\r\n        if (response) {\r\n            let responseData = response.json() as LoginResponse;\r\n            this.http.setToken(responseData.token, responseData.expires);\r\n            this.saveUserData(responseData.user);\r\n            this.announceLoginState();\r\n        } else {\r\n            this._handleLogout();\r\n        }\r\n\r\n        return this.loggedInUser;\r\n    }\r\n\r\n    logout(silent?: boolean): Promise<boolean> {\r\n        return this.http.post(API.logout, {})\r\n            .toPromise()\r\n            .then(() => {\r\n                this._handleLogout();\r\n                if (!silent) {\r\n                    this.announceLoginState();\r\n                }\r\n                return true;\r\n            });\r\n    }\r\n\r\n    private _handleLogout(): void {\r\n        this.http.reset();\r\n        this.clearUserData();\r\n    }\r\n\r\n    isLoggedIn(): boolean {\r\n        return this.loggedInUser && true;\r\n    }\r\n\r\n    getLoggedInUser(): User {\r\n        if (this.checkTokenExpiration()) {\r\n            return this.loggedInUser;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getAdminTeams(): Team[] | string[] {\r\n        return this.getLoggedInUser().adminOfTeams;\r\n    }\r\n\r\n    getTeams(): Team[] | string[] {\r\n        return this.getLoggedInUser().memberOfTeams;\r\n    }\r\n\r\n    getUserName(): string {\r\n        return this.loggedInUser.firstName + ' ' + this.loggedInUser.lastName;\r\n    }\r\n\r\n    getInvites(): Invite[] {\r\n        return this.loggedInUser.invites || [];\r\n    }\r\n\r\n    /**\r\n     * Change information on the current user\r\n     */\r\n    updateUser(user: User): Promise<User> {\r\n        return this.http.put(API.updateUser(user._id), user)\r\n            .toPromise()\r\n            .then((response) => {\r\n                let user = response.json() as User;\r\n                this.saveUserData(user);\r\n                return this.loggedInUser;\r\n            });\r\n    }\r\n\r\n    setPreference(key: string, val: string|boolean): Promise<User> {\r\n        return this.http.post(API.userPreference(this.loggedInUser._id), {\r\n            key: key,\r\n            val: ''+val\r\n        }).toPromise()\r\n            .then((response) => {\r\n                let user = response.json() as User;\r\n                this.saveUserData(user);\r\n                return this.loggedInUser;\r\n            });\r\n    }\r\n\r\n    getPreference(key: string, def?: string): string {\r\n        let value: string = def || '';\r\n\r\n        if (this.loggedInUser.preferences) {\r\n            this.loggedInUser.preferences.forEach(pref => {\r\n                if (pref.key == key) {\r\n                    value = pref.value;\r\n                }\r\n            });\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    can (key: string): boolean {\r\n        if (!this.loggedInUser || !this.loggedInUser.actions || !this.loggedInUser.actions.length || this.isLocked()) {\r\n            return false;\r\n        } else {\r\n            return this.loggedInUser.actions.indexOf(key) > -1;\r\n        }\r\n    }\r\n\r\n    isAdminOfTeam(team: Team): boolean {\r\n        return this.isUserAdminOfTeam(this.loggedInUser, team);\r\n    }\r\n\r\n    isUserAdminOfTeam(user: User, team: Team): boolean {\r\n        if (!user || !team) {\r\n            return false;\r\n        }\r\n\r\n        if (!user.adminOfTeams || !user.adminOfTeams.length) {\r\n            return false;\r\n        } else if ((<Team> user.adminOfTeams[0])._id) {\r\n            return (<Team[]> user.adminOfTeams).findIndex(t => {\r\n                return t._id === team._id;\r\n            }) > -1;\r\n        } else {\r\n            return (<string[]> user.adminOfTeams).indexOf(team._id) > -1;\r\n        }\r\n    }\r\n\r\n    isSuperAdmin(): boolean {\r\n        return this.loggedInUser && this.loggedInUser.superAdmin;\r\n    }\r\n\r\n    isLocked(): boolean {\r\n        return this.loggedInUser.locked;\r\n    }\r\n\r\n    isExpired(user?: User): boolean {\r\n        user = user || this.loggedInUser;\r\n        return !user.subscription || (new Date(user.subscription.expiration)).getTime() <= Date.now();\r\n    }\r\n\r\n    cancelInvite(invite: Invite): Promise<boolean> {\r\n        return this.http.delete(API.cancelInvite(invite._id))\r\n            .toPromise()\r\n            .then(response => {\r\n                let inviteIndex = Util.indexOfId(this.loggedInUser.invites, invite);\r\n                if (inviteIndex > -1) {\r\n                    this.loggedInUser.invites.splice(inviteIndex, 1);\r\n                }\r\n\r\n                return true;\r\n            })\r\n    }\r\n\r\n    acceptInvite(inviteId: string, email?: string, password?: string, name?: string): Promise<User> {\r\n        if (this.loggedInUser) {\r\n            return this.http.put(API.acceptInvite(this.loggedInUser._id, inviteId), {}).toPromise()\r\n                .then(response => {\r\n                    let user = response.json() as User;\r\n                    this.saveUserData(user);\r\n                    this.announceLoginState();\r\n                    return this.loggedInUser;\r\n                })\r\n        } else {\r\n            return this.http.post(API.user, {\r\n                email: email,\r\n                password: password,\r\n                invite: inviteId,\r\n                name: name\r\n            }).toPromise()\r\n            .then(response => {\r\n                return response.json() as User;\r\n            });\r\n        }\r\n    }\r\n\r\n    leaveTeam(team: Team): Promise<User> {\r\n        return this.http.put(API.leaveTeam(this.loggedInUser._id, team._id), {}).toPromise()\r\n            .then(response => {\r\n                let user = response.json() as User;\r\n\r\n                this.saveUserData(user);\r\n                this.announceLoginState();\r\n\r\n                return this.loggedInUser;\r\n            })\r\n    }\r\n\r\n    /**\r\n     * The following functions get various expanded properties on the user object. They don't change the logged in user data\r\n     */\r\n    fetchPurchases(): Promise<Purchase[]> {\r\n        return this.http.get(API.userPurchases(this.loggedInUser._id))\r\n            .toPromise()\r\n            .then(response => {\r\n                return response.json() as Purchase[];\r\n            });\r\n    }\r\n\r\n    private _subscriptionPromise: Promise<User>;\r\n    fetchSubscription(): Promise<User> {\r\n        if (!this._subscriptionPromise) {\r\n            this._subscriptionPromise = this.http.get(API.userSubscription(this.loggedInUser._id))\r\n                .toPromise()\r\n                .then(response => {\r\n                    return response.json() as User;\r\n                });\r\n        }\r\n        return this._subscriptionPromise;\r\n    }\r\n\r\n}"]}