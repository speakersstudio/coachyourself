{"version":3,"sources":["../../app/src/service/app.service.ts"],"names":[],"mappings":"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","file":"app.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers } from '@angular/http';\r\nimport { UrlSegment } from '@angular/router';\r\n\r\nimport { Observable, Subject } from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport {API} from '../constants';\r\n\r\nimport { AppHttp } from '../data/app-http';\r\n\r\nimport { User } from '../model/user';\r\nimport { Team } from '../model/team';\r\nimport { Package } from '../model/package';\r\nimport { PackageConfig } from '../model/config';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n\r\n    // private packageUrl = '/api/package/';\r\n\r\n    // private userValidateUrl = '/api/user/validate';\r\n    // private teamValidateUrl = '/api/team/validate';\r\n\r\n    private redirect: UrlSegment[];\r\n\r\n    private config: PackageConfig;\r\n    \r\n    constructor(\r\n        private http: AppHttp\r\n    ) { }\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        console.error('An error has occurred', error);\r\n        return Promise.reject(error.message || error);\r\n    }\r\n\r\n    setRedirect (url: UrlSegment[]): void {\r\n        this.redirect = url;\r\n    }\r\n\r\n    getRedirect (): UrlSegment[] {\r\n        return this.redirect;\r\n    }\r\n\r\n    validateUser (user: User): Promise<string> {\r\n        return this.http.post(API.validateUser, user)\r\n            .toPromise()\r\n            .then((response) => {\r\n                let data = response.json();\r\n                if (data.conflict == 'email') {\r\n                    return 'That email address is already registered on ImprovPlus.';\r\n                } else {\r\n                    return '';\r\n                }\r\n            })\r\n    }\r\n\r\n    validateTeam (team: Team): Promise<string> {\r\n        return this.http.post(API.validateTeam, team)\r\n            .toPromise()\r\n            .then(response => {\r\n                let data = response.json();\r\n                if (data.conflict == 'name') {\r\n                    return 'A team with that name is already registered on ImprovPlus';\r\n                } else {\r\n                    return '';\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Get all of the available packages!\r\n     */\r\n    private _packagePromise: Promise<Package[]>;\r\n    private _getPackages(): Promise<Package[]> {\r\n        if (!this._packagePromise) {\r\n            this._packagePromise = this.http.get(API.package)\r\n                .toPromise()\r\n                .then(response => {\r\n                    let packages = response.json() as Package[];\r\n                    return packages;\r\n                })\r\n                .catch(this.handleError);\r\n        }\r\n        return this._packagePromise;\r\n    }\r\n\r\n    getPackages(userType: string, team: boolean): Promise<Package[]> {\r\n        let options: Package[] = [];\r\n\r\n        // return this.getSubscriptionPackage(userType, team)\r\n        //     .then(pkg => {\r\n        //         options.push(pkg);\r\n\r\n        //         return this._getPackages()\r\n        //     })\r\n        return this._getPackages()\r\n            .then(packages => {\r\n\r\n                if (userType == 'facilitator') {\r\n                    if (!team) {\r\n                        packages.forEach(p => {\r\n                            let copy = Object.assign({}, p);\r\n                            options.push(copy);\r\n                        });\r\n                    } else {\r\n                        packages.forEach(p => {\r\n                            let copy = Object.assign({}, p);\r\n                            // the facilitator team packages are more expensive\r\n                            copy.price += this.config.fac_team_package_markup;\r\n                            options.push(copy);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return options.sort((a, b) => {\r\n                    return a.price > b.price ? -1 : 1;\r\n                });\r\n            })\r\n    }\r\n\r\n    getSubscriptionPackage(userType: string, team: boolean): Promise<Package> {\r\n        return this.getPackageConfig()\r\n            .then(config => {\r\n                let subOption = new Package();\r\n                subOption._id = 'sub';\r\n\r\n                if (userType == 'facilitator') {\r\n                    if (!team) {\r\n                        subOption.name = 'Individual Facilitator Subscription';\r\n                        subOption.price = config.fac_sub_price;\r\n\r\n                        subOption.description = [\r\n                            \"Gain access to the the app for one year.\",\r\n                            \"Browse and purchase from our entire catalogue of facilitation materials.\",\r\n                            \"Utilize the database of over 200 Improv Exercises.\"\r\n                        ];\r\n\r\n                    } else {\r\n                        subOption.name = 'Facilitator Team Subscription';\r\n                        subOption.price = config.fac_team_sub_price;\r\n\r\n                        subOption.description = [\r\n                            \"Your team can share and collaborate with the ImprovPlus app.\",\r\n                            \"Browse and purchase from our entire catalogue of facilitation materials.\",\r\n                            \"Utilize the database of over 200 Improv Exercises.\"\r\n                        ];\r\n                    }\r\n                } else {\r\n                    if (!team) {\r\n                        subOption.name = 'Individual Improviser Subscription';\r\n                        subOption.price = config.improv_sub_price;\r\n\r\n                        subOption.description = [\r\n                            \"Gain access to the app for one year.\",\r\n                            \"Browse the database of over 200 Improv Games.\",\r\n                            \"Join the ever-growing ImprovPlus community.\"\r\n                        ];\r\n                    } else {\r\n                        subOption.name = 'Improviser Team Subscription';\r\n                        subOption.price = config.improv_team_sub_price;\r\n\r\n                        subOption.description = [\r\n                            'Access powerful marketing and collaboration tools.',\r\n                            'Browse the database of over 200 Improv Games.',\r\n                            \"Join the ever-growing ImprovPlus community.\"\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                return subOption;\r\n            });\r\n    }\r\n\r\n    \r\n    getPackageConfig(): Promise<PackageConfig> {\r\n        if (this.config) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(this.config);\r\n            });\r\n        } else {\r\n            return this.http.get(API.packageConfig)\r\n                .toPromise()\r\n                .then(result => {\r\n                    this.config = result.json() as PackageConfig;\r\n                    return this.config;\r\n                });\r\n        }\r\n    }\r\n\r\n}"]}