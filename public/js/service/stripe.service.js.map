{"version":3,"sources":["../../app/src/service/stripe.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAA2C;AAM3C;IAII;IAGA,CAAC;IAED,4BAAI,GAAJ,UAAK,MAAc;QACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAED,mCAAW,GAAX,UAAY,cAA+B;QACvC,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QACtC,IAAI,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE;YACrC,sCAAsC;YACtC,KAAK,EAAE;gBACH,IAAI,EAAE;oBACF,KAAK,EAAE,SAAS;oBAChB,UAAU,EAAE,MAAM;oBAClB,UAAU,EAAE,yCAAyC;oBACrD,aAAa,EAAE,aAAa;oBAC5B,QAAQ,EAAE,MAAM;oBAEhB,eAAe,EAAE;wBACb,KAAK,EAAE,oBAAoB;qBAC9B;iBACJ;gBACD,OAAO,EAAE;oBACL,KAAK,EAAE,SAAS;oBAChB,SAAS,EAAE,SAAS;iBACvB;aACJ;SACJ,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YACjB,UAAU,CAAC,gBAAgB,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;QAC1D,CAAC;QAED,MAAM,CAAC,UAAU,CAAC;IACtB,CAAC;IAED,sCAAc,GAAd,UAAe,UAAe;QAC1B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IAC/C,CAAC;IA7CQ,aAAa;QADzB,iBAAU,EAAE;;OACA,aAAa,CA8CzB;IAAD,oBAAC;CA9CD,AA8CC,IAAA;AA9CY,sCAAa","file":"stripe.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Response } from '@angular/http';\r\n\r\ndeclare var Stripe: any;\r\n\r\n@Injectable()\r\nexport class StripeService {\r\n\r\n    stripe: any;\r\n\r\n    constructor(\r\n    ) {\r\n        \r\n    }\r\n\r\n    init(config: string): void {\r\n        this.stripe = Stripe(config);\r\n    }\r\n\r\n    setupStripe(changeCallback?: (e?:any)=>void ): any {\r\n        let elements = this.stripe.elements();\r\n        let creditCard = elements.create('card', {\r\n            // value: {postalCode: this.user.zip},\r\n            style: {\r\n                base: {\r\n                    color: '#32325d',\r\n                    lineHeight: '24px',\r\n                    fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n                    fontSmoothing: 'antialiased',\r\n                    fontSize: '16px',\r\n\r\n                    '::placeholder': {\r\n                        color: 'rgba(96,96,96,0.5)'\r\n                    }\r\n                },\r\n                invalid: {\r\n                    color: '#fa755a',\r\n                    iconColor: '#fa755a'\r\n                }\r\n            }\r\n        });\r\n\r\n        if (changeCallback) {\r\n            creditCard.addEventListener('change', changeCallback);\r\n        }\r\n        \r\n        return creditCard;\r\n    }\r\n\r\n    getStripeToken(creditCard: any): Promise<any> {\r\n        return this.stripe.createToken(creditCard);\r\n    }\r\n}"]}