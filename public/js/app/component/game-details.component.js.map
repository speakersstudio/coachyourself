{"version":3,"sources":["../../app/src/app/component/game-details.component.ts"],"names":[],"mappings":"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","file":"game-details.component.js","sourcesContent":["import { \r\n    Component,\r\n    OnInit,\r\n    OnDestroy,\r\n    OnChanges,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    trigger,\r\n    state,\r\n    style,\r\n    transition,\r\n    animate\r\n} from '@angular/core';\r\nimport { Router, ActivatedRoute, Params }   from '@angular/router';\r\nimport { Location }   from '@angular/common';\r\n\r\nimport { PREFERENCE_KEYS } from '../../constants';\r\n\r\nimport { AppComponent } from \"../../component/app.component\";\r\n\r\nimport { GameDatabaseService } from '../service/game-database.service';\r\nimport { GameNoteService } from '../service/game-note.service';\r\n\r\nimport { Game } from '../../model/game';\r\nimport { Name } from '../../model/name';\r\nimport { GameMetadata } from '../../model/game-metadata';\r\nimport { Tag } from '../../model/tag';\r\nimport { Note } from '../../model/note';\r\n\r\nimport { Tool } from '../view/toolbar.view';\r\nimport { TabData } from '../../model/tab-data';\r\n\r\nimport { UserService } from \"../../service/user.service\";\r\n\r\nimport { Util } from '../../util/util';\r\nimport { TextUtil } from '../../util/text.util';\r\nimport { ShrinkAnim } from '../../util/anim.util';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'game-details',\r\n    templateUrl: '../template/game-details.component.html',\r\n    animations: [\r\n        ShrinkAnim.height,\r\n        trigger('expand', [\r\n            state('in', style({height: '*'})),\r\n            transition('void => *', [\r\n                style({height: 0}),\r\n                animate(100)\r\n            ]),\r\n            transition('* => void', [\r\n                style({height: '*'}),\r\n                animate(100, style({height: 0}))\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class GameDetailsComponent implements OnInit, OnChanges {\r\n\r\n    @Input() game: Game;\r\n    @Output() onClose: EventEmitter<Tool> = new EventEmitter();\r\n\r\n    private _gameId: string;\r\n\r\n    gameNotFound: boolean;\r\n\r\n    dialog: boolean = false;\r\n\r\n    isPosting: boolean;\r\n\r\n    // tagMap: Object = {};\r\n    notes: Note[] = []\r\n\r\n    namesOpen: boolean = false;\r\n\r\n    editNameShown: boolean;\r\n    addNameShown: boolean;\r\n\r\n    editName: string;\r\n\r\n    allPlayerCounts: GameMetadata[] = [];\r\n\r\n    allDurations: GameMetadata[] = [];\r\n\r\n    addTagShown: boolean;\r\n    newTagText: string;\r\n    tagHints: Tag[];\r\n\r\n    descriptionHtml: string;\r\n\r\n    editDescriptionShown: boolean;\r\n    newDescriptionText: string;\r\n\r\n    createMetadataType: string;\r\n\r\n    // playerCountID: string;\r\n    durationID: string;\r\n\r\n    showPublicNotes: boolean;\r\n    showTeamNotes: boolean;\r\n    showPrivateNotes: boolean;\r\n\r\n    tools: Tool[] = [\r\n        {\r\n            icon: \"fa-trash\",\r\n            name: \"deleteGame\",\r\n            text: \"Delete Game\",\r\n            permission: \"game_delete\"\r\n        },\r\n        {\r\n            icon: \"fa-random\",\r\n            name: \"randomGame\",\r\n            text: \"Select Random Game\",\r\n            active: false\r\n        }\r\n    ];\r\n\r\n    tabs = [\r\n        {\r\n            name: 'Details',\r\n            id: 'details',\r\n            icon: 'rocket'\r\n        },\r\n        {\r\n            name: 'Notes',\r\n            id: 'notes',\r\n            icon: 'sticky-note-o'\r\n        }\r\n    ];\r\n    selectedTab: string = 'notes';\r\n\r\n    constructor(\r\n        public _app: AppComponent,\r\n        private gameDatabaseService: GameDatabaseService,\r\n        private gameNoteService: GameNoteService,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private location: Location,\r\n        public userService: UserService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        if (!this.game) {\r\n            this.route.params.forEach((params: Params) => {\r\n                let id = params['id']\r\n                this.gameDatabaseService.getGame(id)\r\n                    .then(game => this.setGame(game),\r\n                        error => {\r\n                            // if (error.status == 404) {\r\n                                this.gameNotFound = true;\r\n                            // }\r\n                        });\r\n            });\r\n        } else {\r\n            this.dialog = true;\r\n            this.setGame(this.game);\r\n        }\r\n\r\n        if (this.can('game_edit')) {\r\n            this.gameDatabaseService.getPlayerCounts().then((playerCounts) => {\r\n                this.allPlayerCounts = playerCounts;\r\n            });\r\n            this.gameDatabaseService.getDurations().then((durations) => {\r\n                this.allDurations = durations\r\n            });\r\n        }\r\n\r\n        this.showPublicNotes = this.userService.getPreference(PREFERENCE_KEYS.showPublicNotes, 'true') == 'true';\r\n        this.showTeamNotes = this.userService.getPreference(PREFERENCE_KEYS.showTeamNotes, 'true') == 'true';\r\n        this.showPrivateNotes = this.userService.getPreference(PREFERENCE_KEYS.showPrivateNotes, 'true') == 'true';\r\n\r\n    }\r\n\r\n    ngOnChanges(changes:any): void {\r\n        // make sure that things get set up if the game changes\r\n        if (changes.game && (!this._gameId || this._gameId != changes.game.currentValue._id)) {\r\n            this.setGame(changes.game.currentValue);\r\n        }\r\n    }\r\n\r\n    renderDescription(): void {\r\n        if (this.game.description) {\r\n            let converter = TextUtil.getMarkdownConverter();\r\n            this.descriptionHtml = converter.makeHtml(this.game.description);\r\n        } else {\r\n            this.descriptionHtml = 'No Description';\r\n        }\r\n    }\r\n\r\n    selectTab(tab: TabData): void {\r\n        this.selectedTab = tab.id;\r\n    }\r\n\r\n    can(permission: string): boolean {\r\n        return this.userService.can(permission);\r\n    }\r\n\r\n    private _getInput(name?:string): HTMLInputElement {\r\n        name = name || 'editName';\r\n        let i = <HTMLInputElement>document.querySelector('[name=\"' + name + '\"]');\r\n        return i;\r\n    }\r\n\r\n    private _focusInput(name?:string): void {\r\n\r\n        // TODO: figure out how to focus the new input element - probably stupid complicated with Angular\r\n        // http://stackoverflow.com/questions/34522306/angular-2-focus-on-newly-added-input-element\r\n\r\n        // but hey, this works for now!\r\n        setTimeout(() => {\r\n            let i = this._getInput(name);\r\n            if (i) {\r\n                i.focus();\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    showEditName(): void {\r\n        this.addNameShown = false;\r\n        if (this.can('name_edit')) {\r\n            if (!this.game.names.length) {\r\n                this.showAddName();\r\n            } else {\r\n                this.editName = this.game.names[0].name;\r\n                this.editNameShown = true;\r\n                this._focusInput();\r\n            }\r\n        }\r\n    }\r\n\r\n    showAddName(): void {\r\n        this.editNameShown = false;\r\n        if (this.can('name_create')) {\r\n            this.editName = \"\";\r\n            this.addNameShown = true;\r\n            this._focusInput();\r\n        }\r\n    }\r\n\r\n    saveEditName(): void {\r\n        if (this.editName) {\r\n            if (this.editNameShown) {\r\n                // update the existing name if it is different\r\n                if (this.editName != this.game.names[0].name) {\r\n                    this.game.names[0].name = this.editName;\r\n                    this.gameDatabaseService.saveName(this.game.names[0]);\r\n                }\r\n            } else if (this.addNameShown) {\r\n                // create a new name\r\n                this.gameDatabaseService.createName(this.game._id, this.editName)\r\n                    .then(name => {\r\n                        if (!this.dialog) {\r\n                            this.game.names.unshift(name);\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n\r\n        this.editName = \"\";\r\n        this.editNameShown = false;\r\n        this.addNameShown = false;\r\n    }\r\n\r\n    private _saveGame(): void {\r\n        // this._closeAllEdits();\r\n        this.setGame(this.game);\r\n\r\n        this.gameDatabaseService.saveGame(this.game)\r\n            .then((game) => {\r\n                //this.setGame(game); not really necessary, because we already set it\r\n            })\r\n            .catch(() => {\r\n                // TODO: revert?\r\n            })\r\n    }\r\n\r\n    savePlayerCount(playerCount: GameMetadata): void {\r\n        if (this.can('game_edit')) {\r\n            if (!this.game.playerCount || this.game.playerCount._id !== playerCount._id) {\r\n                this.game.playerCount = playerCount;\r\n                this._saveGame();\r\n            }\r\n        }\r\n    }\r\n\r\n    saveDuration(duration: GameMetadata): void {\r\n        if (this.can('game_edit')) {\r\n            if (!this.game.duration || this.game.duration._id !== duration._id) {\r\n                this.game.duration = duration;\r\n                this._saveGame();\r\n            }\r\n        }\r\n    }\r\n\r\n    showCreateMetadataDialog(show: boolean, type: string): void {\r\n        if (this.can('metadata_create')) {\r\n            this.createMetadataType = type;\r\n            this._app.backdrop(true);\r\n        }\r\n    }\r\n    onCreateMetadataDone(metadata: GameMetadata): void {\r\n        this.createMetadataType = \"\";\r\n        this._app.backdrop(false);\r\n\r\n        if (metadata) {\r\n            if (metadata.type == 'playerCount') {\r\n                // this.allPlayerCounts.push(metadata);\r\n                this.game.playerCount = metadata;\r\n            } else if (metadata.type == 'duration') {\r\n                // this.allDurations.push(metadata);\r\n                this.game.duration = metadata;\r\n            }\r\n\r\n            this._saveGame();\r\n        }\r\n    }\r\n\r\n    showAddTag(): void {\r\n        if (this.can('game_tag_add')) {\r\n            this.addTagShown = true;\r\n\r\n            this._focusInput('addTag');\r\n        }\r\n    }\r\n\r\n    _tagTypeDebounce: any;\r\n    _selectedTagIndex: number = -1;\r\n    newTagKeyDown(event: KeyboardEvent): void {\r\n\r\n        let key = event.keyCode;\r\n\r\n        switch(key) {\r\n            case 13:\r\n                this._selectedTagIndex = -1;\r\n\r\n                this.addTagByName();\r\n                break;\r\n            case 27: // escape\r\n                this._selectedTagIndex = -1;\r\n\r\n                this.addTagShown = false;\r\n                break;\r\n            case 40: // down\r\n            case 38: // up\r\n\r\n                if (key === 40) {\r\n                    if (this._selectedTagIndex < this.tagHints.length - 1) {\r\n                        this._selectedTagIndex++;\r\n                    } else {\r\n                        this._selectedTagIndex = 0;\r\n                    }\r\n                } else {\r\n                    if (this._selectedTagIndex > 0) {\r\n                        this._selectedTagIndex--;\r\n                    } else {\r\n                        this._selectedTagIndex = this.tagHints.length - 1;\r\n                    }\r\n                }\r\n                if (this.tagHints[this._selectedTagIndex]) {\r\n                    this.newTagText = this.tagHints[this._selectedTagIndex].name;\r\n                    this._focusInput('addTag');\r\n                }\r\n\r\n                break;\r\n            default:\r\n                clearTimeout(this._tagTypeDebounce);\r\n                this._tagTypeDebounce = setTimeout(() => {\r\n                    this.tagHints = [];\r\n                    if (this.newTagText) {\r\n                        this.gameDatabaseService.searchForTags(this.newTagText)\r\n                            .then(tags => {\r\n                                let max = tags.length > 8 ? 8 : tags.length;\r\n                                for(let cnt = 0; cnt < max; cnt++) {\r\n                                    let tag = tags[cnt];\r\n                                    // only hint tags that aren't already added to this game,\r\n                                    // and only show the first 8 hints, why not\r\n                                    if (!this.gameDatabaseService.gameHasTag(this.game, [tag._id])) {\r\n                                        this.tagHints.push(tag);\r\n                                    }\r\n                                }\r\n                            });\r\n                    }\r\n                }, 100);\r\n                break;\r\n        }\r\n    }\r\n\r\n    tagToRemove: Tag;\r\n    removeTag(tag: Tag): void {\r\n        if (!this.can('game_tag_remove')) {\r\n            return;\r\n        }\r\n        this.tagToRemove = tag;\r\n    }\r\n\r\n    doRemoveTag(): void {\r\n        if (!this.can('game_tag_remove')) {\r\n            return;\r\n        }\r\n        let index = Util.indexOfId(this.game.tags, this.tagToRemove);\r\n        if (index > -1) {\r\n            this.game.tags.splice(index, 1);\r\n        }\r\n        this.gameDatabaseService.deleteTagFromGame(this.game, this.tagToRemove)\r\n    }\r\n\r\n    cancelRemoveTag(event: MouseEvent): void {\r\n        this.tagToRemove = null;\r\n\r\n        event.preventDefault();\r\n        event.cancelBubble = true;\r\n    }\r\n\r\n    tagSaving: boolean;\r\n\r\n    addTagByName(): void {\r\n        let tag: Tag;\r\n        // see if any of the hints match the input exactly\r\n        this.tagHints.forEach(hint => {\r\n            if (hint.name.toLocaleLowerCase() == this.newTagText.toLocaleLowerCase()) {\r\n                tag = hint;\r\n            }\r\n        });\r\n\r\n        if (tag) {\r\n            this.addTag(tag);\r\n        } else {\r\n            if (this.can('tag_create')) {\r\n                this.tagSaving = true;\r\n                // if there were no matches, we'll create a new tag\r\n                this.gameDatabaseService.createTag(this.newTagText, this.game)\r\n                    .then(game => {\r\n                        this.tagSaving = false;\r\n                        this.game.tags = game.tags\r\n                    });\r\n            }\r\n        }\r\n\r\n        this.newTagText = \"\";\r\n        this.tagHints = [];\r\n        this._selectedTagIndex = -1;\r\n    }\r\n\r\n    addTag(tag: Tag): void {\r\n        if (this.can('game_tag_add')) {\r\n            this.tagSaving = true;\r\n            this.gameDatabaseService.saveTagToGame(this.game, tag)\r\n                .then(game => {\r\n                    this.tagSaving = false;\r\n                    this.game = game\r\n                });\r\n            \r\n            this.newTagText = \"\";\r\n            this.tagHints = [];\r\n        }\r\n    }\r\n\r\n    showEditDescription(): void {\r\n        this.newDescriptionText =this.game.description;\r\n        this.editDescriptionShown = true;\r\n    }\r\n\r\n    cancelEditDescription(): void {\r\n        this.newDescriptionText = '';\r\n        this.editDescriptionShown = false;\r\n    }\r\n\r\n    saveDescription(): void {\r\n        this.game.description = this.newDescriptionText;\r\n        this.renderDescription();\r\n        this.gameDatabaseService.saveGame(this.game);\r\n        this.editDescriptionShown = false;\r\n    }\r\n\r\n    setGame(game: Game): void {\r\n        if (!game) {\r\n            this.gameNotFound = true;\r\n        } else {\r\n            this._gameId = game._id;\r\n\r\n            this.game = game;\r\n\r\n            if (this.game.names && this.game.names.length) {\r\n                this.gameNoteService.getNotesForGame(this.game)\r\n                    .then((notes) => {\r\n                        this.notes = notes\r\n                    });\r\n            }\r\n\r\n            this.renderDescription();\r\n        }\r\n    }\r\n\r\n    getPublicNotes(): Note[] {\r\n        let notes = this.notes.filter(note => {\r\n            return note.public;\r\n        });\r\n        return notes;\r\n    }\r\n\r\n    getPrivateNotes(): Note[] {\r\n        let notes = this.notes.filter(note => {\r\n            return !note.public && (!note.teams || !note.teams.length);\r\n        });\r\n        return notes;\r\n    }\r\n\r\n    getTeamNotes(): Note[] {\r\n        let notes = this.notes.filter(note => {\r\n            return !note.public && note.teams && note.teams.length;\r\n        })\r\n        return notes;\r\n    }\r\n\r\n    closePage(): void {\r\n        if (this.dialog) {\r\n            this.onClose.emit();\r\n        } else {\r\n            this.router.navigate(['/app/games']);\r\n        }\r\n    }\r\n\r\n    toggleNames(): void {\r\n        this.namesOpen = !this.namesOpen;\r\n    }\r\n\r\n    onToolClicked(tool: Tool): void {\r\n        switch (tool.name) {\r\n            case \"randomGame\":\r\n                if (this.dialog) {\r\n                    this.onClose.emit(tool);\r\n                } else {\r\n                    this.router.navigate(['/app/games', {random: 'random'}]);\r\n                }\r\n                break;\r\n            case \"deleteGame\":\r\n                this._app.dialog(\"Delete Game?\",\r\n                    \"Are you sure you want to delete this game. There is no turning back from this.\",\r\n                    \"Delete\",\r\n                    () => {\r\n                        this.gameDatabaseService.deleteGame(this.game)\r\n                            .then(() => {\r\n                                this.closePage();\r\n                            })\r\n                    });\r\n                break;\r\n        }\r\n    }\r\n\r\n    noteCreated(note: Note): void {\r\n        this.notes.push(note);\r\n    }\r\n\r\n    removeNote(note: Note): void {\r\n        let index = Util.indexOfId(this.notes, note);\r\n        if (index > -1) {\r\n            this.notes.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    togglePublicNotes(): void {\r\n        setTimeout(() => {\r\n            this.userService.setPreference(PREFERENCE_KEYS.showPublicNotes, ''+this.showPublicNotes);\r\n        }, 10);\r\n    }\r\n\r\n    toggleTeamNotes(): void {\r\n        setTimeout(() => {\r\n            this.userService.setPreference(PREFERENCE_KEYS.showTeamNotes, ''+this.showTeamNotes);\r\n        }, 10);\r\n    }\r\n\r\n    togglePrivateNotes(): void {\r\n        setTimeout(() => {\r\n            this.userService.setPreference(PREFERENCE_KEYS.showPrivateNotes, ''+this.showPrivateNotes);\r\n        }, 10);\r\n    }\r\n\r\n}"]}