{"version":3,"sources":["../../app/src/app/component/materials-library.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAkD;AAClD,0CAAuD;AACvD,0CAAiE;AAEjE,+DAA+D;AAG/D,8DAA4D;AAC5D,wDAAsD;AAatD;IAWI,mCACW,IAAkB,EACjB,MAAc,EACd,KAAqB,EACrB,cAA8B,EAC9B,WAAwB,EACxB,oBAA0C;QAL3C,SAAI,GAAJ,IAAI,CAAc;QACjB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,yBAAoB,GAApB,oBAAoB,CAAsB;QAftD,UAAK,GAAW,8DAA8D,CAAC;QAG/E,kBAAa,GAAmB,EAAE,CAAC;QAGnC,eAAU,GAAW,EAAE,CAAC;QACxB,UAAK,GAAW,EAAE,CAAC;QAWnB,WAAM,GAAW,EAChB,CAAA;IAHG,CAAC;IAKL,4CAAQ,GAAR;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,iDAAa,GAAb,UAAc,IAAU;IAExB,CAAC;IAED,8CAAU,GAAV;QAAA,iBA2BC;QAzBG,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE;aAClC,IAAI,CAAC,UAAA,SAAS;YACX,KAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YACvB,KAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QACpC,CAAC,CAAC,CAAC;QAEP,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAA,IAAI;YACnC,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,EAChC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;YAE7B,YAAa,CAAC,OAAO,CAAC,UAAA,IAAI;gBAChC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;oBACvD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;oBACvB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YAEO,aAAc,CAAC,OAAO,CAAC,UAAA,IAAI;gBACjC,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;oBACvD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;oBACvB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC1B,CAAC,CAAC,CAAA;YACN,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAA;IAEN,CAAC;IAED,wDAAoB,GAApB;IAEA,CAAC;IAED,+CAAW,GAAX;IAEA,CAAC;IAlEQ,yBAAyB;QALrC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,8CAA8C;SAC9D,CAAC;yCAamB,4BAAY;YACT,eAAM;YACP,uBAAc;YACL,gCAAc;YACjB,0BAAW;YACF,6BAAoB;OAjB7C,yBAAyB,CAoErC;IAAD,gCAAC;CApED,AAoEC,IAAA;AApEY,8DAAyB","file":"materials-library.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { PathLocationStrategy } from '@angular/common';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport {AppComponent    } from '../../component/app.component';\r\nimport { Tool, SearchResult } from '../view/toolbar.view';\r\n\r\nimport { LibraryService } from '../service/library.service';\r\nimport { TeamService } from '../service/team.service';\r\n\r\nimport { Subscription } from '../../model/subscription';\r\nimport { Package } from '../../model/package';\r\nimport { MaterialItem } from '../../model/material-item';\r\nimport { Team } from '../../model/team';\r\nimport { Library } from '../../model/library';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: \"packages\",\r\n    templateUrl: \"../template/materials-library.component.html\"\r\n})\r\nexport class MaterialsLibraryComponent implements OnInit {\r\n\r\n    title: string = '<span class=\"light\">materials</span><strong>library</strong>';\r\n\r\n    filter: boolean; // TODO\r\n    searchResults: SearchResult[] = [];\r\n\r\n    ownedMaterials: Library;\r\n    adminTeams: Team[] = [];\r\n    teams: Team[] = [];\r\n\r\n    constructor(\r\n        public _app: AppComponent,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private libraryService: LibraryService,\r\n        private teamService: TeamService,\r\n        private pathLocationStrategy: PathLocationStrategy\r\n    ) { }\r\n\r\n    _tools: Tool[] = [\r\n    ]\r\n\r\n    ngOnInit(): void {\r\n        this.getLibrary();\r\n    }\r\n\r\n    onToolClicked(tool: Tool): void {\r\n        \r\n    }\r\n\r\n    getLibrary(): void {\r\n\r\n        this.libraryService.getOwnedMaterials()\r\n            .then(materials => {\r\n                this._app.hideLoader();\r\n                this.ownedMaterials = materials;\r\n            });\r\n\r\n        this.teamService.fetchTeams().then(user => {\r\n            let adminOfTeams = user.adminOfTeams,\r\n                memberOfTeams = user.memberOfTeams;\r\n\r\n            (<Team[]> adminOfTeams).forEach(team => {\r\n                this.libraryService.getTeamMaterials(team._id).then(library => {\r\n                    team.library = library;\r\n                    this.adminTeams.push(team);\r\n                });\r\n            });\r\n\r\n            (<Team[]> memberOfTeams).forEach(team => {\r\n                this.libraryService.getTeamMaterials(team._id).then(library => {\r\n                    team.library = library;\r\n                    this.teams.push(team);\r\n                })\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n    onNoVersionsSelected(): void {\r\n        \r\n    }\r\n\r\n    clearFilter(): void {\r\n\r\n    }\r\n\r\n}\r\n"]}