{"version":3,"sources":["../../app/src/app/service/library.service.ts"],"names":[],"mappings":"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","file":"library.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { RequestOptions, Headers } from '@angular/http';\r\nimport { AppHttp } from '../../data/app-http';\r\nimport { API } from '../../constants';\r\n\r\nimport { Package } from '../../model/package';\r\nimport { MaterialItem, MaterialItemVersion } from '../../model/material-item';\r\nimport { Subscription } from '../../model/subscription';\r\n\r\nimport { User } from '../../model/user';\r\nimport { UserService } from '../../service/user.service';\r\n\r\nimport { Library } from '../../model/library';\r\n\r\n@Injectable()\r\nexport class LibraryService {\r\n\r\n    private subscriptions: Subscription[];\r\n    private packages: Package[];\r\n\r\n    constructor(\r\n        private http: AppHttp,\r\n        private userService: UserService\r\n        ) { }\r\n\r\n    /**\r\n     * Get the materials that you own\r\n     */\r\n    getOwnedMaterials(): Promise<Library> {\r\n        return this.http.get(API.userMaterials(this.userService.getLoggedInUser()._id))\r\n            .toPromise()\r\n            .then(response => {\r\n                return response.json() as Library;\r\n            });\r\n    }\r\n\r\n    downloadMaterial(id: string): void {\r\n        this.http.get(API.getMaterial(id))\r\n            .toPromise()\r\n            .then(response => {\r\n                let url = response.json().url;\r\n                window.open(location.origin + url);\r\n            });\r\n    }\r\n\r\n    downloadPackage(id: string): void {\r\n        this.http.get(API.getPackage(id))\r\n            .toPromise()\r\n            .then(response => {\r\n                let url = response.json().url;\r\n                window.open(location.origin + url);\r\n            })\r\n    }\r\n\r\n    /**\r\n     * Util method to sort a material item's versions\r\n     * @param m the material item to find the latest version for\r\n     */\r\n    getLatestVersionForMaterialItem(m: MaterialItem): MaterialItemVersion {\r\n        m.versions.sort((a, b) => {\r\n            return b.ver - a.ver;\r\n        });\r\n        return m.versions[0];\r\n    }\r\n\r\n    // this is for admin - perhaps admin items should live in their own service?\r\n    getAllMaterials(): Promise<MaterialItem[]> {\r\n        return this.http.get(API.getMaterial('all'))\r\n            .toPromise()\r\n            .then(response => {\r\n                return response.json() as MaterialItem[];\r\n            });\r\n    }\r\n\r\n    getAllPackages(): Promise<Package[]> {\r\n        return this.http.get(API.getPackage('all'))\r\n            .toPromise()\r\n            .then(response => {\r\n                return response.json() as Package[];\r\n            });\r\n    }\r\n\r\n    createMaterial(): Promise<MaterialItem> {\r\n        if (this.userService.can('material_create')) {\r\n            return this.http.post(API.materials, {})\r\n                .toPromise()\r\n                .then(response => {\r\n                    return response.json() as MaterialItem;\r\n                });\r\n        }\r\n    }\r\n\r\n    createPackage(): Promise<Package> {\r\n        if (this.userService.can('package_create')) {\r\n            return this.http.post(API.package, {})\r\n                .toPromise()\r\n                .then(response => {\r\n                    return response.json() as Package;\r\n                });\r\n        }\r\n    }\r\n\r\n    deleteMaterial(material: MaterialItem): Promise<boolean> {\r\n        if (this.userService.can('material_delete')) {\r\n            return this.http.delete(API.getMaterial(material._id))\r\n                .toPromise()\r\n                .then(response => {\r\n                    return true;\r\n                })\r\n        }\r\n    }\r\n\r\n    deletePackage(p: Package): Promise<boolean> {\r\n        if (this.userService.can('package_delete')) {\r\n            return this.http.delete(API.getPackage(p._id))\r\n                .toPromise()\r\n                .then(response => {\r\n                    return true;\r\n                })\r\n        }\r\n    }\r\n\r\n    saveMaterial(material: MaterialItem): Promise<MaterialItem> {\r\n        if (!this.userService.isSuperAdmin()) {\r\n            return;\r\n        }\r\n        return this.http.put(API.getMaterial(material._id), material)\r\n            .toPromise()\r\n            .then(response => {\r\n                return response.json() as MaterialItem;\r\n            });\r\n    }\r\n\r\n    savePackage(p: Package): Promise<Package> {\r\n        if (this.userService.can('package_edit')) {\r\n            return this.http.put(API.getPackage(p._id), p)\r\n                .toPromise()\r\n                .then(response => {\r\n                    return response.json() as Package;\r\n                })\r\n        }\r\n    }\r\n\r\n    postNewVersion(materialItemId: string, version: MaterialItemVersion, file: File): Promise<MaterialItem> {\r\n        if (!this.userService.isSuperAdmin()) {\r\n            return;\r\n        }\r\n\r\n        let formData = new FormData();\r\n        formData.append('ver', version.ver + '');\r\n        formData.append('description', version.description);\r\n        formData.append('file', file, file.name);\r\n\r\n        return this.http.postFormData(API.materialVersion(materialItemId), formData).toPromise()\r\n            .then(response => {\r\n                return response.json() as MaterialItem;\r\n            });\r\n    }\r\n\r\n    deleteVersion(materialItemId: string, version: MaterialItemVersion): Promise<MaterialItem> {\r\n        if (!this.userService.isSuperAdmin()) {\r\n            return;\r\n        }\r\n\r\n        return this.http.delete(API.getMaterialVersion(materialItemId, version._id)).toPromise()\r\n            .then(response => {\r\n                return response.json() as MaterialItem;\r\n            });\r\n    }\r\n\r\n    savePackagePackages(p: Package): Promise<Package> {\r\n        if (this.userService.can('package_edit')) {\r\n            return this.http.put(API.savePackagePackages(p._id), p)\r\n                .toPromise()\r\n                .then(response => {\r\n                    return response.json() as Package;\r\n                })\r\n        }\r\n    }\r\n\r\n    savePackageMaterials(p: Package): Promise<Package> {\r\n        if (this.userService.can('package_edit')) {\r\n            return this.http.put(API.savePackageMaterials(p._id), p)\r\n                .toPromise()\r\n                .then(response => {\r\n                    return response.json() as Package;\r\n                })\r\n        }\r\n    }\r\n\r\n    private handleError(error: any): Promise<any> {\r\n        console.error('An error has occurred', error);\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}"]}