{"version":3,"sources":["../../app/src/app/service/team.service.ts"],"names":[],"mappings":"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","file":"team.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers } from '@angular/http';\r\n\r\nimport { Observable, Subject } from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { AppHttp } from '../../data/app-http';\r\nimport { API } from '../../constants';\r\n\r\nimport { UserService } from '../../service/user.service';\r\n\r\nimport { User } from \"../../model/user\";\r\nimport { Team } from '../../model/team';\r\nimport { Purchase } from '../../model/purchase';\r\nimport { Invite } from '../../model/invite';\r\nimport { Subscription } from '../../model/subscription';\r\n\r\n@Injectable()\r\nexport class TeamService {\r\n\r\n    private teams: Team[] = [];\r\n\r\n    constructor(\r\n        private http: AppHttp,\r\n        private userService: UserService\r\n    ) {\r\n    }\r\n\r\n    addTeams(teams: Team[]): void {\r\n        teams.forEach(team => {\r\n            this.addTeam(team);\r\n        });\r\n    }\r\n\r\n    addTeam(team: Team): void {\r\n        let index = this.teams.findIndex(t => {\r\n            return t._id === team._id;\r\n        });\r\n        \r\n        if (index > -1) {\r\n            this.teams.splice(index, 1);\r\n        }\r\n\r\n        this.teams.push(team);\r\n    }\r\n\r\n    findTeamById(id: string): Team {\r\n        let selectedTeam = null;\r\n        this.teams.forEach(team => {\r\n            if (team._id == id) {\r\n                selectedTeam = team;\r\n            }\r\n        })\r\n        return selectedTeam;\r\n    }\r\n\r\n    getTeam(id: string): Promise<Team> {\r\n        let team = this.findTeamById(id);\r\n        if (team) {\r\n            return new Promise<Team>((res, rej) => {\r\n                res(team);\r\n            });\r\n        } else {\r\n            return this.http.get(API.getTeam(id))\r\n                .toPromise()\r\n                .then(response => {\r\n                    return response.json() as Team;\r\n                });\r\n        }\r\n    }\r\n\r\n    saveTeam(team: Team): Promise<Team> {\r\n        return this.http.put(API.getTeam(team._id), team)\r\n            .toPromise()\r\n            .then(response => {\r\n                let team = response.json() as Team;\r\n                this.addTeam(team);\r\n                return team;\r\n            })\r\n    }\r\n\r\n    invite(team: Team, email: string): Promise<Invite> {\r\n        return this.http.post(API.teamInvite(team._id), {email: email})\r\n            .toPromise()\r\n            .then(response => {\r\n                let invite = response.json() as Invite;\r\n                let teamToUpdate = this.findTeamById(team._id);\r\n                if (teamToUpdate) {\r\n                    teamToUpdate.subscription.invites.push(invite);\r\n                }\r\n                \r\n                return invite;\r\n            });\r\n    }\r\n\r\n    removeUserFromTeam(team: Team, user: User): Promise<Team> {\r\n        return this.http.put(API.removeUser(team._id, user._id), {})\r\n            .toPromise()\r\n            .then(response => {\r\n                let team = response.json() as Team;\r\n                this.addTeam(team);\r\n                return team;\r\n            })\r\n    }\r\n\r\n    promoteUser(team: Team, user: User): Promise<Team> {\r\n        return this.http.put(API.promoteUser(team._id, user._id), {})\r\n            .toPromise()\r\n            .then(response => {\r\n                let team = response.json() as Team;\r\n                this.addTeam(team);\r\n                return team;\r\n            })\r\n    }\r\n\r\n    demoteUser(team: Team, user: User): Promise<Team> {\r\n        return this.http.put(API.demoteUser(team._id, user._id), {})\r\n            .toPromise()\r\n            .then(response => {\r\n                let team = response.json() as Team;\r\n                this.addTeam(team);\r\n                return team;\r\n            })\r\n    }\r\n    \r\n    fetchPurchases(team: Team): Promise<Purchase[]> {\r\n        return this.http.get(API.teamPurchases(team._id))\r\n            .toPromise()\r\n            .then(response => {\r\n                return response.json() as Purchase[];\r\n            });\r\n    }\r\n\r\n    fetchSubscription(team: Team): Promise<Subscription> {\r\n        return this.http.get(API.teamSubscription(team._id))\r\n            .toPromise()\r\n            .then(response => {\r\n                let team = response.json() as Team;\r\n                return team.subscription;\r\n            })\r\n    }\r\n\r\n    fetchTeams(user?: User): Promise<User> {\r\n        user = user || this.userService.getLoggedInUser();\r\n\r\n        return this.http.get('/api/user/' + user._id + '/teams')\r\n            .toPromise()\r\n            .then(response => {\r\n                let user = response.json() as User;\r\n                    \r\n                this.addTeams(<Team[]> user.adminOfTeams);\r\n                this.addTeams(<Team[]> user.memberOfTeams);\r\n\r\n                return user;\r\n            });\r\n    }\r\n\r\n    buySubscriptions(teamId: string, count: number, stripeToken: string): Promise<Subscription> {\r\n        return this.http.post(API.teamSubscription(teamId), {count: count, stripeToken: stripeToken}).toPromise()\r\n            .then(response => {\r\n                return response.json() as Subscription;\r\n            })\r\n    }\r\n\r\n}"]}