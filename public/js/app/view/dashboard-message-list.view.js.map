{"version":3,"sources":["../../app/src/app/view/dashboard-message-list.view.ts"],"names":[],"mappings":"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","file":"dashboard-message-list.view.js","sourcesContent":["import { \r\n    Component,\r\n    OnInit,\r\n    OnDestroy,\r\n    Input,\r\n    ViewChild,\r\n    ViewChildren,\r\n    QueryList\r\n} from '@angular/core';\r\n\r\nimport 'rxjs/Subscription';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AppComponent } from '../../component/app.component';\r\n\r\nimport { UserService } from '../../service/user.service';\r\n\r\nimport { PreferenceUtil } from '../../util/preference.util';\r\n\r\nimport { BracketCardDirective } from '../../directive/bracket-card.directive';\r\n\r\nimport { ShrinkAnim } from '../../util/anim.util';\r\n\r\nimport { Invite } from '../../model/invite';\r\n\r\nclass DashboardMessage {\r\n    key: string;\r\n    title?: string;\r\n    body?: string;\r\n    button?: string;\r\n    action?: Function;\r\n    trigger?: Function;\r\n    notDismissable?: boolean;\r\n}\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'dashboard-message-list',\r\n    templateUrl: '../template/view/dashboard-message-list.view.html',\r\n    animations: [ ShrinkAnim.height ]\r\n})\r\nexport class DashboardMessageListView implements OnInit, OnDestroy {\r\n\r\n    @ViewChild('dashboardMessage', {read: BracketCardDirective}) messageElement: BracketCardDirective;\r\n\r\n    private PREFERENCE_KEY_PREFIX = 'hide_dash_message_';\r\n\r\n    userSubscription: Subscription;\r\n\r\n    messages: DashboardMessage[] = [\r\n        {\r\n            key: 'invite',\r\n            trigger: () => {\r\n                 let invites = this.userService.getInvites();\r\n                 if (invites.length) {\r\n                     this.invite = invites[0];\r\n                 }\r\n                 return invites.length;\r\n            }\r\n        },\r\n        {\r\n            key: 'no-subscription',\r\n            title: 'No Subscription',\r\n            body: `\r\n                <p>Your subscription is expired or otherwise invalid. If you own any materials or other content, you can still access them, but other areas of the app will be off-limits until you renew your subscription.</p>\r\n            `,\r\n            button: 'Purchase Subscription',\r\n            notDismissable: true,\r\n            action: () => {\r\n                this._app.toast('This feature is coming soon. Please hang on.');\r\n            },\r\n            trigger: () => {\r\n                return this.userService.isExpired();\r\n            }\r\n        },\r\n        {\r\n            key: 'welcome'\r\n        },\r\n        {\r\n            key: 'birthday-' + (new Date()).getFullYear(),\r\n            title: '<div class=\"columns\"><i class=\"fa fa-birthday-cake\"></i> <span>Happy Birthday!</span> <i class=\"fa fa-birthday-cake\"></i></div>',\r\n            body: `\r\n                <p>It's your Special Day (or at least the day you told us was your Special Day). We here at ImprovPlus hope it's a great one!</p>\r\n            `,\r\n            trigger: () => {\r\n                let birthday = this.userService.getLoggedInUser().birthday;\r\n                if (birthday) {\r\n                    let date = new Date(birthday),\r\n                        today = new Date();\r\n                    if (date.getDate() == today.getDate() && date.getMonth() == today.getMonth()) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        {\r\n            key: 'username',\r\n            trigger: () => {\r\n                return !this.userService.getLoggedInUser().firstName || !this.userService.getLoggedInUser().lastName\r\n            }\r\n        },\r\n        {\r\n            key: 'birthday-enter',\r\n            trigger: () => {\r\n                return !this.userService.getLoggedInUser().birthday;\r\n            }\r\n        }\r\n    ];\r\n    visibleMessage: DashboardMessage = new DashboardMessage();\r\n\r\n    isPosting: boolean;\r\n\r\n    firstName: string;\r\n    lastName: string;\r\n\r\n    invite: Invite;\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private router: Router,\r\n        private _app: AppComponent\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        // if the user is refreshing, wait until it finishes to show any messages\r\n        if (!this.userService.isLoggingIn) {\r\n            this.showNextMessage();\r\n        }\r\n\r\n        // when the user updates, re-scan to see if the message to show has changed\r\n        this.userSubscription = this.userService.loginState$.subscribe(user => {\r\n            if (user) {\r\n                this.showNextMessage();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.userSubscription.unsubscribe();\r\n    }\r\n\r\n    showNextMessage(): void {\r\n        let delay = this.visibleMessage ? 300 : 1;\r\n\r\n        this.visibleMessage = null;\r\n\r\n        // show the first message that has not been hidden by the user\r\n        setTimeout(() => {\r\n            this.messages.some(message => {\r\n                let key = message.key;\r\n                let visible = this.userService.getPreference(this.PREFERENCE_KEY_PREFIX + key) != 'true';\r\n\r\n                if (visible && message.trigger) {\r\n                    visible = visible && message.trigger();\r\n                }\r\n                if (visible) {\r\n                    this.visibleMessage = message;\r\n                    return true;\r\n                }\r\n            });\r\n        }, delay);\r\n    }\r\n\r\n    dismissVisibleMessage(): void {\r\n        if (!this.visibleMessage.notDismissable) {\r\n            this.userService.setPreference(this.PREFERENCE_KEY_PREFIX + this.visibleMessage.key, 'true')\r\n                .then(() => {\r\n                    setTimeout(() => {\r\n                        this.showNextMessage();\r\n                    }, 300);\r\n                })\r\n\r\n            this.messageElement.close();\r\n        }\r\n    }\r\n\r\n    saveUserName(): void {\r\n        let user = this.userService.getLoggedInUser();\r\n        user.firstName = this.firstName;\r\n        user.lastName = this.lastName;\r\n        \r\n        this.isPosting = true;\r\n        this.userService.updateUser(user)\r\n            .then(user => {\r\n                this.isPosting = false;\r\n                setTimeout(() => {\r\n                    this.showNextMessage();\r\n                }, 100);\r\n            });\r\n\r\n    }\r\n\r\n    inviteAccepted: boolean;\r\n    inviteRejected: boolean;\r\n\r\n    acceptInvite(): void {\r\n        this.isPosting = true;\r\n        this.userService.acceptInvite(this.invite._id).then(() => {\r\n            this.isPosting = false;\r\n            this.inviteAccepted = true;\r\n        });\r\n    }\r\n\r\n    rejectInvite(): void {\r\n        this.isPosting = true;\r\n        this.userService.cancelInvite(this.invite).then(() => {\r\n            this.isPosting = false;\r\n            this.inviteRejected = true;\r\n        })\r\n    }\r\n\r\n    dismissInvite(): void {\r\n        this.messageElement.close();\r\n\r\n        setTimeout(() => {\r\n            this.inviteAccepted = false;\r\n            this.inviteRejected = false;\r\n            \r\n            this.showNextMessage();\r\n        }, 300);\r\n    }\r\n\r\n    birthdayMonth: number;\r\n    birthdayDay: number;\r\n    birthdayYear: number;\r\n\r\n    saveBirthday(): void {\r\n        if (this.birthdayYear < 100) {\r\n            this.birthdayYear = this.birthdayYear + 1900; // Y2K compliant!\r\n        }\r\n\r\n        let birthday = new Date();\r\n        birthday.setDate(this.birthdayDay);\r\n        birthday.setMonth(this.birthdayMonth);\r\n        birthday.setFullYear(this.birthdayYear);\r\n\r\n        this.isPosting = true;\r\n\r\n        let user = this.userService.getLoggedInUser();\r\n        user.birthday = birthday.getTime() + '';\r\n        this.userService.updateUser(user).then(user => {\r\n            this.isPosting = false;\r\n            setTimeout(() => {\r\n                this.showNextMessage();\r\n            }, 100);\r\n        })\r\n    }\r\n}\r\n"]}