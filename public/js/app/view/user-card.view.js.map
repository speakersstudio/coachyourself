{"version":3,"sources":["../../app/src/app/view/user-card.view.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAOuB;AAEvB,6BAA2B;AAG3B,kDAAgD;AAChD,kDAAgD;AAEhD,2DAAyD;AAEzD,yCAAwC;AAOxC;IAeI,sBACY,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAf5B,cAAS,GAAG,oBAAQ,CAAC;QAInB,uBAAkB,GAAuB,IAAI,mBAAY,EAAE,CAAC;QAC5D,gBAAW,GAAuB,IAAI,mBAAY,EAAE,CAAC;QACrD,eAAU,GAAuB,IAAI,mBAAY,EAAE,CAAC;IAU1D,CAAC;IAEL,+BAAQ,GAAR;QAEI,IAAI,CAAC,eAAe,GAAG,oBAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEjE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,GAAG,CAAC;IAE5E,CAAC;IAED,kCAAW,GAAX;IAEA,CAAC;IAED,kCAAW,GAAX;QACI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IAED,mCAAY,GAAZ;QACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,kCAAW,GAAX;QACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAtCQ;QAAR,YAAK,EAAE;kCAAO,WAAI;8CAAC;IAEV;QAAT,aAAM,EAAE;kCAAqB,mBAAY;4DAA4B;IAC5D;QAAT,aAAM,EAAE;kCAAc,mBAAY;qDAA4B;IACrD;QAAT,aAAM,EAAE;kCAAa,mBAAY;oDAA4B;IAPrD,YAAY;QALxB,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,uBAAuB;YACjC,WAAW,EAAE,sCAAsC;SACtD,CAAC;yCAiB2B,0BAAW;OAhB3B,YAAY,CA4CxB;IAAD,mBAAC;CA5CD,AA4CC,IAAA;AA5CY,oCAAY","file":"user-card.view.js","sourcesContent":["import { \r\n    Component,\r\n    OnInit,\r\n    OnDestroy,\r\n    Input,\r\n    Output,\r\n    EventEmitter\r\n} from '@angular/core';\r\n\r\nimport 'rxjs/Subscription';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { TextUtil } from '../../util/text.util';\r\nimport { TimeUtil } from '../../util/time.util';\r\n\r\nimport { UserService } from '../../service/user.service';\r\n\r\nimport { User } from '../../model/user';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: '.improvplus-user-card',\r\n    templateUrl: '../template/view/user-card.view.html'\r\n})\r\nexport class UserCardView implements OnInit, OnDestroy {\r\n    private _timeUtil = TimeUtil;\r\n\r\n    @Input() user: User;\r\n\r\n    @Output() removeUserFromTeam: EventEmitter<User> = new EventEmitter();\r\n    @Output() promoteUser: EventEmitter<User> = new EventEmitter();\r\n    @Output() demoteUser: EventEmitter<User> = new EventEmitter();\r\n    \r\n    admin: boolean;\r\n    userIsMe: boolean;\r\n    amIAdmin: boolean;\r\n\r\n    descriptionText: string;\r\n\r\n    constructor(\r\n        private userService: UserService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.descriptionText = TextUtil.stripTags(this.user.description);\r\n\r\n        this.userIsMe = this.user._id == this.userService.getLoggedInUser()._id;\r\n\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        \r\n    }\r\n\r\n    _removeUser(): void {\r\n        this.removeUserFromTeam.emit(this.user);\r\n    }\r\n\r\n    _promoteUser(): void {\r\n        this.promoteUser.emit(this.user);\r\n    }\r\n\r\n    _demoteUser(): void {\r\n        this.demoteUser.emit(this.user);\r\n    }\r\n\r\n\r\n}\r\n"]}