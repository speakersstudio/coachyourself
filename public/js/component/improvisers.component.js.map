{"version":3,"sources":["../../app/src/component/improvisers.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAkD;AAClD,0CAAyC;AACzC,sCAA8C;AAI9C,uCAAqC;AAErC,2DAA2D;AAC3D,iDAA+C;AAE/C,+CAA2D;AAW3D;IAqBI,8BACW,IAAkB,EACjB,MAAc,EACd,IAAU;QAFX,SAAI,GAAJ,IAAI,CAAc;QACjB,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAM;QApBtB,YAAO,GAAG;YACN,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,IAAI,EAAE,EAAE;YACR,SAAS,EAAE,EAAE;SAChB,CAAA;QAOD,kBAAa,GAAG,EAAE,CAAC;QACnB,cAAS,GAAG,MAAM,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,CAAC;IAMvD,CAAC;IAEL,uCAAQ,GAAR;QACI,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,wCAAS,GAAT;IACA,CAAC;IAED,oCAAK,GAAL;QACI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAED,gDAAiB,GAAjB;QACI,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IACD,gDAAiB,GAAjB;QACI,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,4CAAa,GAAb;QAAA,iBAkBC;QAjBG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3E,IAAI,CAAC,YAAY,GAAG,mCAAmC,CAAA;QAC3D,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YAEvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YACvB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC;iBAClC,SAAS,EAAE;iBACX,IAAI,CAAC,UAAA,QAAQ;gBACV,KAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;gBACvB,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAEzB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACrB,CAAC,CAAC,CAAC;QACX,CAAC;IACL,CAAC;IAnEQ,oBAAoB;QAThC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,iBAAiB;YAC3B,WAAW,EAAE,wCAAwC;YACrD,UAAU,EAAE;gBACR,sBAAU,CAAC,MAAM;gBACjB,sBAAU,CAAC,IAAI;aAClB;SACJ,CAAC;yCAuBmB,4BAAY;YACT,eAAM;YACR,WAAI;OAxBb,oBAAoB,CAqEhC;IAAD,2BAAC;CArED,AAqEC,IAAA;AArEY,oDAAoB","file":"improvisers.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Headers, Http } from '@angular/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n// import { MarketingSiteComponent } from './ms.component';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { DialogAnim, ToggleAnim } from '../util/anim.util';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: \"for-improvisers\",\r\n    templateUrl: \"../template/improvisers.component.html\",\r\n    animations: [\r\n        DialogAnim.dialog,\r\n        ToggleAnim.fade\r\n    ]\r\n})\r\nexport class ImprovisersComponent implements OnInit {\r\n\r\n    contactDialogVisible: boolean;\r\n\r\n    contact = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        company: \"\",\r\n        team: \"\",\r\n        objective: \"\"\r\n    }\r\n\r\n    contactError: string;\r\n\r\n    sending: boolean;\r\n    sent: boolean;\r\n    \r\n    toolbarheight = 48;\r\n    pageStart = window.innerHeight - (this.toolbarheight + 24);\r\n\r\n    constructor(\r\n        public _app: AppComponent,\r\n        private router: Router,\r\n        private http: Http\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.setupSize();\r\n    }\r\n\r\n    setupSize(): void {\r\n    }\r\n\r\n    login(): void {\r\n        this._app.login();\r\n    }\r\n\r\n    showContactDialog(): void {\r\n        this.contactDialogVisible = true;\r\n        this._app.backdrop(true);\r\n    }\r\n    hideContactDialog(): void {\r\n        this.contactDialogVisible = false;\r\n        this.sent = false;\r\n        this.sending = false;\r\n        this._app.backdrop(false);\r\n    }\r\n\r\n    submitContact(): void {\r\n        if (!this.contact.firstName || !this.contact.lastName || !this.contact.email) {\r\n            this.contactError = \"Please enter your name and email.\"\r\n        } else {\r\n            this.contactError = \"\";\r\n            \r\n            this.sending = true;\r\n            this._app.showLoader();\r\n            this.http.post('/hireUs', this.contact)\r\n                .toPromise()\r\n                .then(response => {\r\n                    this._app.hideLoader();\r\n                    this._app.backdrop(true);\r\n                    \r\n                    this.sending = false;\r\n                    this.sent = true;\r\n                });\r\n        }\r\n    }\r\n\r\n}\r\n"]}