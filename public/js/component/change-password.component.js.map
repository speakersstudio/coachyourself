{"version":3,"sources":["../../app/src/component/change-password.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAGuC;AACvC,0CAAmE;AAEnE,iDAA+C;AAC/C,wDAAsD;AAEtD,+CAA+C;AAU/C,IAAa,uBAAuB;IAkBhC,iCACY,IAAkB,EAClB,MAAc,EACd,KAAqB,EACrB,WAAwB;QAHxB,SAAI,GAAJ,IAAI,CAAc;QAClB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QAlBpC,aAAQ,GAAY,IAAI,CAAC;IAmBrB,CAAC;IAEL,0CAAQ,GAAR;QAAA,iBAiBC;QAhBG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,MAAc;YACrC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,WAAW,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAA,CAAC;YAC1D,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACJ,UAAU,CAAC;oBACP,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBACtB,CAAC,EAAE,GAAG,CAAC,CAAC;YACZ,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAc,GAAd;QAAA,iBAYC;QAXG,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,GAAG,8BAA8B,CAAC;QAChD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC;iBACrD,IAAI,CAAC,UAAA,IAAI;gBACN,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACP,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;gBACtD,CAAC;YACL,CAAC,CAAC,CAAC;QACX,CAAC;IACL,CAAC;IAEL,8BAAC;AAAD,CA1DA,AA0DC,IAAA;AAtDG;IAFC,kBAAW,CAAC,wBAAwB,CAAC;IACrC,kBAAW,CAAC,YAAY,CAAC;;yDACD;AAJhB,uBAAuB;IARnC,gBAAS,CAAC;QACP,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,iBAAiB;QAC3B,WAAW,EAAE,4CAA4C;QACzD,UAAU,EAAE;YACR,sBAAU,CAAC,MAAM;SACpB;KACJ,CAAC;qCAoBoB,4BAAY;QACV,eAAM;QACP,uBAAc;QACR,0BAAW;GAtB3B,uBAAuB,CA0DnC;AA1DY,0DAAuB","file":"change-password.component.js","sourcesContent":["import { \r\n    Component,\r\n    OnInit,\r\n    HostBinding } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params }   from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { UserService } from '../service/user.service';\r\n\r\nimport { DialogAnim } from '../util/anim.util';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: \"change-password\",\r\n    templateUrl: '../template/change-password.component.html',\r\n    animations: [\r\n        DialogAnim.dialog\r\n    ]\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\r\n    @HostBinding('class.dialog-container') \r\n    @HostBinding('class.show')\r\n    isDialog: boolean = true;\r\n\r\n    token: string;\r\n\r\n    checking: boolean;\r\n    valid: boolean;\r\n\r\n    password: string;\r\n    confirmPassword: string;\r\n\r\n    error: string;\r\n\r\n    isPosting: boolean;\r\n\r\n    constructor(\r\n        private _app: AppComponent,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private userService: UserService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.route.params.forEach((params: Params) => {\r\n            this.token = params['token'];\r\n        });\r\n\r\n        this._app.backdrop(true);\r\n\r\n        this.checking = true;\r\n\r\n        this.userService.checkPasswordRecoveryToken(this.token).then(r => {\r\n            this.checking = false;\r\n            if (r) {\r\n                setTimeout(() => {\r\n                    this.valid = true;\r\n                }, 200);\r\n            }\r\n        });\r\n    }\r\n\r\n    submitPassword(): void {\r\n        if (this.password !== this.confirmPassword) {\r\n            this.error = 'Your passwords do not match.';\r\n        } else {\r\n            this.isPosting = true;\r\n            this.userService.changePassword(this.token, this.password)\r\n                .then(user => {\r\n                    if (user) {\r\n                        this.userService.login(user.email, this.password);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n}\r\n"]}