{"version":3,"sources":["../../app/src/data/app-http.ts"],"names":[],"mappings":"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","file":"app-http.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { \r\n    Headers,\r\n    Http,\r\n    Request,\r\n    ConnectionBackend,\r\n    RequestOptions,\r\n    RequestOptionsArgs,\r\n    Response\r\n} from '@angular/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { UserService } from '../service/user.service';\r\n\r\n@Injectable()\r\nexport class AppHttp {\r\n\r\n    private TOKEN_STORAGE_KEY = 'coachyourself_token';\r\n    private EXPIRATION_STORAGE_KEY = 'coachyourself_tokenExpires';\r\n\r\n    private token: string;\r\n    private tokenExpires: number;\r\n\r\n    constructor(\r\n        private http: Http,\r\n        private router: Router\r\n    ) {\r\n        this.loadValues();\r\n    }\r\n\r\n    private loadValues(): void {\r\n        this.token = localStorage.getItem(this.TOKEN_STORAGE_KEY);\r\n        this.tokenExpires = parseInt(localStorage.getItem(this.EXPIRATION_STORAGE_KEY) || '0');\r\n    }\r\n\r\n    private saveValues(token: string, exp: number): void {\r\n        this.token = token;\r\n        this.tokenExpires = exp;\r\n        localStorage.setItem(this.TOKEN_STORAGE_KEY, this.token);\r\n        localStorage.setItem(this.EXPIRATION_STORAGE_KEY, '' + this.tokenExpires);\r\n    }\r\n\r\n    private clearValues(): void {\r\n        localStorage.removeItem(this.TOKEN_STORAGE_KEY);\r\n        localStorage.removeItem(this.EXPIRATION_STORAGE_KEY);\r\n        this.token = null;\r\n        this.tokenExpires = null;\r\n    }\r\n\r\n    checkTokenExpiration(): boolean {\r\n        if (!this.token || !this.tokenExpires || this.tokenExpires <= Date.now()) {\r\n            this.token = '';\r\n            this.tokenExpires = null;\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    setToken(token: string, expires: number): void {\r\n        this.saveValues(token, expires);\r\n    }\r\n\r\n    reset(): void {\r\n        this.clearValues();\r\n    }\r\n\r\n    getToken(): string {\r\n        return this.token;\r\n    }\r\n\r\n    request(url: string | Request, options?: RequestOptionsArgs): Observable<Response> {\r\n        return this.intercept(this.http.request(url, this.getRequestOptionArgs(options)));\r\n    }\r\n\r\n    get(url: string, options?: RequestOptionsArgs): Observable<Response> {\r\n        return this.intercept(this.http.get(url, this.getRequestOptionArgs(options)));\r\n    }\r\n\r\n    post(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\r\n        return this.intercept(this.http.post(url, body, this.getRequestOptionArgs(options)));\r\n    }\r\n\r\n    postFormData(url: string, body: FormData, options?: RequestOptionsArgs): Observable<Response> {\r\n        return this.intercept(this.http.post(url, body, this.getRequestOptionArgs(options, 'multipart/form-data')));\r\n    }\r\n\r\n    put(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\r\n        return this.intercept(this.http.put(url, body, this.getRequestOptionArgs(options)));\r\n    }\r\n\r\n    delete(url: string, options?: RequestOptionsArgs): Observable<Response> {\r\n        return this.intercept(this.http.delete(url, this.getRequestOptionArgs(options)));\r\n    }\r\n    \r\n    appendAuthorizationHeader(headers: Headers): Headers {\r\n        // TODO: somehow make this asynchronous so we can refresh the token if necessary?\r\n        if (this.checkTokenExpiration()) {\r\n            headers.append('x-access-token', this.token);\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    getRequestOptionArgs(options?: RequestOptionsArgs, contentType?: string): RequestOptionsArgs {\r\n        if (options == null) {\r\n            options = new RequestOptions();\r\n        }\r\n        if (options.headers == null) {\r\n            options.headers = new Headers();\r\n            if (contentType !== 'multipart/form-data') {\r\n                // angular will set up the multipart/form-data headers properly on its own\r\n                options.headers.append('Content-Type', 'application/json');\r\n            }\r\n        }\r\n        this.appendAuthorizationHeader(options.headers);\r\n        return options;\r\n    }\r\n\r\n    intercept(observable: Observable<Response>): Observable<Response> {\r\n        return observable.catch((err, source) => {\r\n            if (err.status == 401 && err.url.indexOf('/login') == -1) {\r\n                if (err.url.indexOf('/refreshToken') > -1) {\r\n                    // if the token refresh doesn't work, the user account has become invalid\r\n                    this.reset();\r\n                    this.router.navigate(['/welcome']);\r\n                } else {\r\n                    // redirect the user to the unauthorized page?\r\n                    this.router.navigate(['/app/unauthorized']);\r\n                }\r\n                return Observable.empty();\r\n            } else {\r\n                return Observable.throw(err);\r\n            }\r\n        });\r\n    }\r\n\r\n}"]}